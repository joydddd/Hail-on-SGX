enclave {
    from "openenclave/edl/syscall.edl" import *;
    from "platform.edl" import *;
    include "server_type.h"
    include "buffer_size.h"

    trusted {
        public void log_regression();
        public void linear_regression_beta();
        public void linear_regression_t_stat();
    };

    untrusted {
        /* get enclave setup data */
        void getclientlist([out] char hostlist[ENCLAVE_READ_BUFFER_SIZE]);

        void getcovlist([out] char covlist[ENCLAVE_READ_BUFFER_SIZE]);

        void gety(
            [in] const char host[MAX_CLIENTNAME_LENGTH], 
            [out] char y[ENCLAVE_READ_BUFFER_SIZE]);

        void getcov(
            [in] const char host[MAX_CLIENTNAME_LENGTH], 
            [in] const char cov_name[MAX_CLIENTNAME_LENGTH], 
            [out] char cov[ENCLAVE_READ_BUFFER_SIZE]);

        /* input data requests*/
        bool getbatch(  
            [in] const char hostname[MAX_CLIENTNAME_LENGTH], 
            enum Row_T type, 
            [out] char batch[ENCLAVE_READ_BUFFER_SIZE]);

        /* output data requests */
        bool writebatch(
            enum Row_T type, 
            [in] char buffer[ENCLAVE_OUTPUT_BUFFER_SIZE]);
    };
};
